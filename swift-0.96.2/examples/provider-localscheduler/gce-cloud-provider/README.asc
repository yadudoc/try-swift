Swift interface to the Clouds
-----------------------------

There are 3 core functions that the Cloud interface does:

submit : Submits a string for execution on a cloud instance.
               The string for execution will be the in the config file in the format :
               CMD_STRING="<string>"
               Once the job is submitted, cloud_submit will emit the string jobid=<uniq_jobid>
               Returns 0 on successful submission.

               If specification is incorrect, or an error occurred, the error message will go to stderr
               Error: codes, not defined.

status : Takes the unique ids of runs, and returns the status of job submitted to the cloud.
               Prints out following:
               <jobid> Q|R|C|F [ exitcode [<error message>] ]
                Q - Queued - Pending run
                R - Running
                C - Completed
                F - Failed optionally

cancel : Takes one jobid as an argument. Cancels/Terminates the job.


Example config:
site.cloud {
    execution {
        type:"coaster"
        URL: "127.0.0.1"
        jobManager: "local:ec2-cloud"
        options {
            maxJobs: 10
            tasksPerNode: 4
            workerLoggingLevel: TRACE
            workerLoggingDirectory: /tmp
            jobOptions {
                ec2CredentialsFile: ${env.HOME}/.ssh/boto-test-credentials.csv
                ec2SecurityGroup: swift_security_group1
                ec2KeypairName: swift-test-pair
                ec2KeypairFile: ${env.HOME}/swift-test-pair.pem
                ec2WorkerImage: ami-23700813
                ec2WorkerType: t1.micro
            }
        }
    }
    initialParallelTasks: 10
    maxParallelTasks: 20
    filesystem.type: swift
    workDirectory: /tmp/swift-trunk-test
    staging: "local"
    app.ALL {executable: "*"}
}

sites: cloud


Examples:

./cloud.py cloud_submit configs <string>
./cloud.py cloud_status configs jobid1 jobid2
./cloud.py cloud_cancel configs jobid1





